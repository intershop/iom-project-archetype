## workaround to rename gitattributes files etc
#set($DOT = '.')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>
    <name>IOM ${projectName} APPLICATION</name>
    <description>IOM ${projectName} APPLICATION</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <platform.version>${platformVersion}</platform.version>
        <intershop.docker.repo>${intershopDockerRepo}</intershop.docker.repo>
        <image.base.name>${projectName}</image.base.name>
        <image.version.suffix></image.version.suffix>
        <image.version>${project.version}${image.version.suffix}</image.version>
        <image.docker.opts>--docker-opts="--no-cache"</image.docker.opts>
        <ubuntu.mirror.x64>http://azure.archive.ubuntu.com/ubuntu/</ubuntu.mirror.x64>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <wildfly.version>30.0.1.Final</wildfly.version>
        <org.junit.version>5.9.2</org.junit.version>
        <org.mockito.version>4.6.1</org.mockito.version>
        <net.bytebuddy.version>1.12.10</net.bytebuddy.version>
        <testframework.version>7.1.0</testframework.version>
        <!-- defines the mirror to be used for Ubuntu distribution/ports
             depending on the hardware architecture. This was necessary,
             since most mirror servers do not support all required hardware
             architectures, making it nearly impossible to define only one
             mirror, that has to fit all architectures.
             URL has to end with / -->
        <ubuntu.mirror.x64>http://azure.archive.ubuntu.com/ubuntu/</ubuntu.mirror.x64>
        <ubuntu.mirror.arm>http://ftp.tu-chemnitz.de/pub/linux/ubuntu-ports/</ubuntu.mirror.arm>
    </properties>

    <repositories>
        <repository>
            <id>iom-maven-artifacts</id>
            <url>${mavenRepoURL}</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

   <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-ee-with-tools</artifactId>
                <scope>import</scope>
                <type>pom</type>
                <version>${wildfly.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- spec / wildfly provided -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-spec-api</artifactId>
            <version>${wildfly.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- external libs -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.10.2</version>
        </dependency>

        <!-- IOM Platform -->
        <dependency>
            <groupId>bakery.persistence</groupId>
            <artifactId>bakery.persistence-common</artifactId>
            <scope>provided</scope>
            <version>${platform.version}</version>
        </dependency>
        
        <dependency>
            <groupId>bakery.persistence</groupId>
            <artifactId>bakery.persistence-common-order</artifactId>
            <scope>compile</scope>
            <version>${platform.version}</version>
            <!-- required as a module BUT we only need the data objects - 
                exclude transitive dependencies -->
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>*</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>bakery.logic</groupId>
            <artifactId>bakery.logic-common</artifactId>
            <scope>provided</scope>
            <version>${platform.version}</version>
        </dependency>
        
        <dependency>
            <groupId>bakery.security</groupId>
            <artifactId>bakery.security-common</artifactId>
            <scope>provided</scope>
            <version>${platform.version}</version>
        </dependency>

        <!-- TEST dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${org.junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${org.junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${org.junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${org.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- integration tests dependencies -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.6.0</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>
        
        <!-- wildfly bom overrides bytebuddy version which is required by 
            mockito -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${net.bytebuddy.version}</version><!--$NO-MVN-MAN-VER$ -->
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.9</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.intershop.oms</groupId>
            <artifactId>iom-test-framework</artifactId>
            <version>${testframework.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.12.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>com.github.vdubus</groupId>
                    <artifactId>velocity-maven-plugin</artifactId>
                    <version>1.1.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M13</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.11</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <parallel>classes</parallel>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled=true
                            junit.jupiter.execution.parallel.mode.default=concurrent
                            junit.jupiter.execution.parallel.mode.classes.default=concurrent
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>run-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <parallel>classes</parallel>
                            <properties>
                                <configurationParameters>
                                    junit.jupiter.execution.parallel.enabled=true
                                    junit.jupiter.execution.parallel.mode.default=same_thread
                                    junit.jupiter.execution.parallel.mode.classes.default=concurrent
                                </configurationParameters>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <webResource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <targetPath>WEB-INF</targetPath>
                            <filtering>true</filtering>
                        </webResource>
                        <webResource>
                            <directory>${basedir}/src/main/webapp/META-INF</directory>
                            <targetPath>WEB-INF/classes/META-INF</targetPath>
                            <filtering>true</filtering>
                        </webResource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                    <debug>true</debug>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <meminitial>256</meminitial>
                    <maxmem>2048</maxmem>
                    <release>17</release>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/bin.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.vdubus</groupId>
                <artifactId>velocity-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Generate source velocity</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>velocity</goal>
                        </goals>
                        <configuration>
                            <templateFiles>
                                <directory>src/sql-config</directory>
                                <includes>
                                    <include>**/*.sql</include>
                                    <include>**/.gitkeep</include>
                                </includes>
                            </templateFiles>
                            <outputDirectory>${project.build.directory}/sql-config</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.8.6</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.intershop.oms</groupId>
                                            <artifactId>project2docker</artifactId>
                                            <version>${platform.version}</version>
                                            <type>zip</type>
                                            <outputDirectory>${project.build.directory}/p2d</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare directory</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>mkdir</executable>
                                    <arguments>
                                        <argument>-p</argument>
                                        <argument>p2d/p2d-dl</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>tar</executable>
                                    <arguments>
                                        <argument>-zxf</argument>
                                        <argument>${project.artifactId}.tgz</argument>
                                        <argument>-C</argument>
                                        <argument>p2d/p2d-dl/</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>Build Image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <!-- NOTE: We're using commandlineArgs 
                                        in order to allow property expansion at runtime. When using <arguments> instead 
                                        you can't expand multiple CLI switches from a single property. -->
                                    <commandlineArgs>${project.build.directory}/p2d/project2docker/build.sh
                                        ${image.docker.opts}</commandlineArgs>
                                    <environmentVariables>
                                        <IMAGE_BASE_NAME>${image.base.name}</IMAGE_BASE_NAME>
                                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                        <PROJECT_DESCRIPTION>${project.description}</PROJECT_DESCRIPTION>
                                        <IMAGE_TAG>${image.version}</IMAGE_TAG>
                                        <IOM_IMAGE_NAME>iom</IOM_IMAGE_NAME>
                                        <IOM_VERSION>${platform.version}</IOM_VERSION>
                                        <IOM_REPO_NAME>${intershop.docker.repo}</IOM_REPO_NAME>
                                        <PROJECT_DIR>${project.build.directory}/p2d/p2d-dl/</PROJECT_DIR>
                                        <UBUNTU_MIRROR_X64>${ubuntu.mirror.x64}</UBUNTU_MIRROR_X64>
                                    </environmentVariables>
                                    <workingDirectory>${basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <site>
            <id>${project.artifactId}</id>
            <url>https://project-url</url>
        </site>
    </distributionManagement>
    
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <aggregate>true</aggregate>
                    <showSuccess>true</showSuccess>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <!-- we do not want to see aggregate reports in modules -->
                <inherited>false</inherited>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-aggregate-report</report>
                            <report>plugin-updates-aggregate-report</report>
                            <report>property-updates-aggregate-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
